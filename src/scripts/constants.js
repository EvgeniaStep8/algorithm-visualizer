const info = {
  bubble:
    "Сортировка пузырьком или сортировка простыми обменами – один из простейших алгоритмов сортировки. Он применяется для упорядочивания массивов небольших размеров.Суть алгоритма в том, что совершается несколько проходов по массиву. При каждом проходе попарно сравниваются два соседних элемента. Если они находятся в верном порядке, то ничего не происходит, в противном случае они меняются местами. В результате первого прохода максимальный элемент окажется в конце, то есть всплывет словно пузырек. Затем все повторяется до того момента пока весь массив не будет отсортирован.",
    comb: "Сортировка расчёской — улучшение сортировки пузырьком. Её идея состоит в том, чтобы «устранить» элементы с небольшими значения в конце массива, которые замедляют работу алгоритма. Если при пузырьковой сортировке при переборе массива сравниваются соседние элементы, то при «расчёсывании» сначала берётся достаточно большое расстояние между сравниваемыми значениями, а потом оно сужается вплоть до минимального.Первоначальный разрыв нужно выбирать не случайным образом, а с учётом специальной величины — фактора уменьшения, оптимальное значение которого равно 1,247. Сначала расстояние между элементами будет равняться размеру массива, поделённому на 1,247; на каждом последующем шаге расстояние будет снова делиться на фактор уменьшения — и так до окончания работы алгоритма.",
  selection:
    "Сортировка выбором - здесь, чтобы отсортировать массив, находим элемент с минимальным значением, затем сравниваем его со значением первой неотсортированной позиции. Если этот элемент меньше, то он становится новым минимумом и их позиции меняются.",
  insertion:
    "Сортировка вставками - сортировка, в которой элементы просматриваются по одному и ставятся на место в соответствии с уже упорядоченным массивом.",
  quick:
    "Быстрая сортировка - в целом это один из самых быстрых алгоритмов сортировки массивов, однако на практике он чаще всего применяется с разного рода модификациями. Является примером принципа «разделяй и властвуй». Идея алгоритма заключается в том, что выбирается опорный элемент, относительно которого будет происходит сортировка. Равные и бОльшие элементы помещаются справа, меньшие – слева. Затем к полученным подмассивам рекурсивно применяются два первых пункта.",
};

const container = document.querySelector(".container");
const button = document.querySelector(".button");
const mashButton = document.querySelector(".mash-up");
const selectSort = document.querySelector("#algorithm");
const selectSpeed = document.querySelector("#speed");
const description = document.querySelector(".info");
const popup = document.querySelector(".popup");
const changeArrayButton = document.querySelector(".change-array");
const closePopupButton = popup.querySelector(".close");
const radiobuttonsForm = popup.querySelector(".radiobuttons");
const form = popup.querySelector(".form");

const baseDelayTime = 300;

const initialArray = [29, 62, 12, 14, 34, 1, 53, 90, 31, 8, 38, 68, 89, 33, 32, 69, 69, 75, 36, 29, 23, 68, 62, 94, 21, 38, 70, 35, 8, 15, 90, 6, 37, 16, 42, 89, 17, 50, 98, 31, 5, 10, 44, 28, 39, 94, 14, 2, 28, 37, 54, 97, 56, 35, 32, 81, 20, 89, 18, 86, 78, 34, 100, 88, 25, 2, 38, 14, 86, 95, 32, 45, 7, 78, 84, 44, 18, 52, 24, 55, 39, 6, 42, 74, 65, 77, 39, 91, 71, 17, 83, 1, 18, 94, 21, 41, 75, 15, 42, 18];

export { info, container, button, mashButton, selectSort, selectSpeed, baseDelayTime, description, initialArray, popup, changeArrayButton, closePopupButton, radiobuttonsForm, form };
